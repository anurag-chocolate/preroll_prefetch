apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    defaultConfig {
        applicationId "vdopiasample.preroll"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
}


repositories {
    flatDir {
        dirs 'libs'
    }
    jcenter()
    maven { url 'https://jitpack.io' }

    maven { url "https://dl.bintray.com/vdopiacorp/sdk" }
    google()
    // If you're using a version of Gradle lower than 4.1, you must instead use:
    maven {
        url 'https://maven.google.com'
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:25.3.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:design:25.3.0'

    compile("com.vdopia.ads.lw:coresdk:2.5.3")  //our mediation sdk, which also includes Chocolate Platform demand
    compile("com.vdopia.ads.lw:google-adapter:1.0.7")


    compile 'com.google.android.gms:play-services-ads:11.8.0'

    compile 'com.android.support:multidex:1.0.2'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile('com.devbrackets.android:exomedia:4.0.3') {
        //If you use your own version of exoplayer, uncomment below
        //exclude group: 'com.google.android.exoplayer'
    }

    /*
     * Note: If you use the Baidu adapter, then please include:
     */
    compile ("com.android.support:palette-v7:25.3.0")



    testImplementation 'junit:junit:4.12'
    //androidTestImplementation 'com.android.support.test:runner:1.0.1'
    //androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                //You can use your own preferred version of Android Support Library
                details.useVersion('25.3.0')
            }
        }
    }
}

